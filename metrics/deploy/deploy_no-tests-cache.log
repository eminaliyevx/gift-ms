
          ===============================
          Deploy run: 1
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.3s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development  7/13] COPY apps/category apps/category
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.3s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/discount apps/discount
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.3s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/11] COPY package.json ./
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98
#3 DONE 0.3s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646
#3 DONE 0.3s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8
#3 DONE 0.3s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build order
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 3/8] COPY package.json ./
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [production 4/8] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/auth apps/auth
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [production 4/9] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/api apps/api
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 5/9] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development 10/13] RUN npm install -g pnpm
#22 CACHED

#23 [development 12/13] RUN pnpm exec prisma generate
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.388827433999628 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 2
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 13/13] RUN pnpm run build product
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  5/11] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/11] COPY libs libs
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [production 6/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/13] COPY apps/customer apps/customer
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [development 13/13] RUN pnpm run build business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build api
#7 CACHED

#8 [production 2/9] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/9] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 4/9] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 3/9] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9909232769981027 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 3
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  7/11] COPY apps/mail apps/mail
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [production 6/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build order
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/order apps/order
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/discount apps/discount
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 13/13] RUN pnpm run build discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build auth
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build payment
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/payment apps/payment
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load .dockerignore
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/customer apps/customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/cart apps/cart
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 4/9] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 6/9] COPY prisma prisma
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [development  6/13] COPY nest-cli.json nest-cli.json
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9872177999988199 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 4
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 5/8] COPY package.json ./
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build attribute
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.71kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/payment apps/payment
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/customer apps/customer
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 3/9] RUN npm install -g pnpm
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 5/9] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 2/9] WORKDIR /usr/src/app
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 4/9] COPY package.json ./
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9633437350019813 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 5
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  6/11] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/11] RUN pnpm install
#10 CACHED

#11 [development  4/11] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.24kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build discount
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build order
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/8] COPY package.json ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 3/8] COPY package.json ./
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  2/11] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/order apps/order
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [production 4/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build attribute
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/attribute apps/attribute
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  7/13] COPY apps/auth apps/auth
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/payment apps/payment
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/business apps/business
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/customer apps/customer
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build api
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 6/9] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [production 4/9] COPY package.json ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 5/9] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9272380199991166 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 6
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/11] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build attribute
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/attribute apps/attribute
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/discount apps/discount
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build discount
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/payment apps/payment
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 0.0s done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/cart apps/cart
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a 0.0s done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/business apps/business
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 0.0s done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build api
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 3/9] RUN npm install -g pnpm
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 6/9] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#20 CACHED

#21 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development  8/13] COPY libs libs
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.224024529002607 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 7
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B 0.0s done
#2 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#1 transferring context:
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/discount apps/discount
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/category apps/category
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 5/8] COPY package.json ./
#9 CACHED

#10 [production 3/8] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build order
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [production 4/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development 10/11] RUN pnpm install
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/payment apps/payment
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build cart
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 4/9] COPY package.json ./
#21 CACHED

#22 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#22 CACHED

#23 [development  8/13] COPY libs libs
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.2956846139989793 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 8
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/11] RUN npm install -g pnpm
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  3/11] COPY package.json ./
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build order
#9 CACHED

#10 [production 5/8] COPY package.json ./
#10 CACHED

#11 [production 3/8] COPY package.json ./
#11 CACHED

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 4/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [production 6/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build discount
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  7/13] COPY apps/attribute apps/attribute
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  7/13] COPY apps/product apps/product
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/auth apps/auth
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build customer
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/business apps/business
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 3/9] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build api
#13 CACHED

#14 [production 6/9] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [production 4/9] COPY package.json ./
#20 CACHED

#21 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#21 CACHED

#22 [development  8/13] COPY libs libs
#22 CACHED

#23 [development  9/13] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9996495460011066 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 9
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  7/11] COPY apps/mail apps/mail
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/11] RUN npm install -g pnpm
#8 CACHED

#9 [development  5/11] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 4/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 3/8] COPY package.json ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/product apps/product
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build category
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build attribute
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 13/13] RUN pnpm run build auth
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 13/13] RUN pnpm run build payment
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 30.43kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/customer apps/customer
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 4/9] COPY package.json ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#15 CACHED

#16 [production 5/9] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development  6/13] COPY nest-cli.json nest-cli.json
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [development  9/13] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 0.0s done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9910946559980511 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 10
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build product
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/11] COPY apps/mail apps/mail
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 4/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build order
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [production 3/8] COPY package.json ./
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.1s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  7/13] COPY apps/category apps/category
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/discount apps/discount
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/auth apps/auth
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/customer apps/customer
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/cart apps/cart
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build business
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [production 3/9] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [development 13/13] RUN pnpm run build api
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development  4/13] COPY pnpm-lock.yaml ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.037416291002184 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 11
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 5/8] COPY package.json ./
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/11] COPY package.json ./
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  4/11] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/discount apps/discount
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  7/13] COPY apps/product apps/product
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development  7/13] COPY apps/payment apps/payment
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  7/13] COPY apps/cart apps/cart
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 3/9] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [production 2/9] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [development 11/13] RUN pnpm install
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.01305729899928 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 12
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.24kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/discount apps/discount
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build payment
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 0.0s done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build auth
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 13/13] RUN pnpm run build customer
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/customer apps/customer
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 3/9] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [production 4/9] COPY package.json ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [production 2/9] WORKDIR /usr/src/app
#20 CACHED

#21 [development 10/13] RUN npm install -g pnpm
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.051006425999105 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 13
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 13/13] RUN pnpm run build product
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  6/11] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development  3/11] COPY package.json ./
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build order
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development  2/11] WORKDIR /usr/src/app
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build attribute
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build payment
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  7/13] COPY apps/customer apps/customer
#16 CACHED

#17 [development 13/13] RUN pnpm run build customer
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/9] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [production 4/9] COPY package.json ./
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 6/9] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 3/9] RUN npm install -g pnpm
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [development  3/13] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.025497914001346 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 14
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 13/13] RUN pnpm run build discount
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  7/13] COPY apps/attribute apps/attribute
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build attribute
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 6/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build order
#16 CACHED

#17 [development  7/13] COPY apps/order apps/order
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.1s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 0.0s done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/business apps/business
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 4/9] COPY package.json ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [development 10/13] RUN npm install -g pnpm
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.028039875000715 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 15
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.58kB done
#5 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.1s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/order apps/order
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 4/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 3/8] COPY package.json ./
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.1s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/category apps/category
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/product apps/product
#6 CACHED

#7 [development 13/13] RUN pnpm run build product
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build discount
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  4/11] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/attribute apps/attribute
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/payment apps/payment
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  7/13] COPY apps/customer apps/customer
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build cart
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build api
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/api apps/api
#17 CACHED

#18 [production 3/9] RUN npm install -g pnpm
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [production 4/9] COPY package.json ./
#20 CACHED

#21 [production 2/9] WORKDIR /usr/src/app
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [development  4/13] COPY pnpm-lock.yaml ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.063997903998941 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 16
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/11] COPY package.json ./
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED

#7 [development  7/13] COPY apps/product apps/product
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/category apps/category
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  7/13] COPY apps/payment apps/payment
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 13/13] RUN pnpm run build business
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build api
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 5/9] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [production 3/9] RUN npm install -g pnpm
#22 CACHED

#23 [development  6/13] COPY nest-cli.json nest-cli.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8860272110030054 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 17
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 3/8] COPY package.json ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [production 5/8] COPY package.json ./
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 4/8] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 2/8] WORKDIR /usr/src/app
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [production 2/8] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 2/8] WORKDIR /usr/src/app
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED
#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED



#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  7/13] COPY apps/discount apps/discount
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 2/8] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 2/8] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 2/8] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development 13/13] RUN pnpm run build payment
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  7/13] COPY apps/auth apps/auth
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 6/9] COPY prisma prisma
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 4/9] COPY package.json ./
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build api
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 3/9] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [production 2/9] WORKDIR /usr/src/app
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0014799240007997 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 18
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build category
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.1s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build order
#18 CACHED

#19 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  5/11] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/product apps/product
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/payment apps/payment
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/9] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  7/13] COPY apps/api apps/api
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 4/9] COPY package.json ./
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [development  3/13] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.056473670002073 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 19
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 5/8] COPY package.json ./
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development 11/11] RUN pnpm run build mail
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build attribute
#6 CACHED

#7 [development  7/13] COPY apps/attribute apps/attribute
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/13] COPY apps/auth apps/auth
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [production 4/9] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build api
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  9/13] COPY prisma prisma
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.015305909000337 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 20
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  7/11] COPY apps/mail apps/mail
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development 11/11] RUN pnpm run build mail
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/category apps/category
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build payment
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build business
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/13] COPY apps/business apps/business
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 30.43kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 6/9] COPY prisma prisma
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 3/9] RUN npm install -g pnpm
#16 CACHED

#17 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  7/13] COPY apps/api apps/api
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8554404730014502 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 21
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/attribute apps/attribute
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 3/8] COPY package.json ./
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [production 4/8] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 0.0s done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build cart
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development  7/13] COPY apps/business apps/business
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build customer
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 4/9] COPY package.json ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [development 13/13] RUN pnpm run build api
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 3/9] RUN npm install -g pnpm
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 6/9] COPY prisma prisma
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#22 CACHED

#23 [production 5/9] COPY pnpm-lock.yaml ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8493492350019514 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 22
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.1s


#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  7/13] COPY apps/discount apps/discount
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 13/13] RUN pnpm run build discount
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED
#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development 11/13] RUN pnpm install
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB 0.0s done
#5 DONE 0.1s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build payment
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  7/13] COPY apps/customer apps/customer
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 13/13] RUN pnpm run build cart
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 3/9] RUN npm install -g pnpm
#10 CACHED

#11 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/9] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 4/9] COPY package.json ./
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [development  5/13] COPY tsconfig.json tsconfig.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8539916879981757 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 23
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development 10/11] RUN pnpm install
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [production 4/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 3/8] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  7/13] COPY apps/order apps/order
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build auth
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a 0.0s done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 3/9] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [production 5/9] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9713627630025148 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 24
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/11] COPY package.json ./
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build order
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 6/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build category
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/13] COPY apps/category apps/category
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 13/13] RUN pnpm run build attribute
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [production 2/9] WORKDIR /usr/src/app
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/api apps/api
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [development 13/13] RUN pnpm run build api
#20 CACHED

#21 [production 3/9] RUN npm install -g pnpm
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [production 5/9] COPY pnpm-lock.yaml ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9272066820003093 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 25
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build discount
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build category
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 3/8] COPY package.json ./
#9 CACHED

#10 [production 4/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development 13/13] RUN pnpm run build order
#12 CACHED

#13 [production 5/8] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 6/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build auth
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build payment
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/13] COPY apps/cart apps/cart
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build customer
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build business
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/api apps/api
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 4/9] COPY package.json ./
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development  2/13] WORKDIR /usr/src/app
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.828446699999273 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 26
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development 10/11] RUN pnpm install
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [development  4/11] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/category apps/category
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.24kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build discount
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development  7/13] COPY apps/customer apps/customer
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [development 13/13] RUN pnpm run build api
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 3/9] RUN npm install -g pnpm
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8967508339993655 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 27
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile:
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#1 DONE 0.0s
#5 transferring context: 10.93kB done

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#5 DONE 0.0s

#6 [development  7/13] COPY apps/attribute apps/attribute
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED
#7 CACHED

#8 [development 13/13] RUN pnpm run build order
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 6/8] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build discount
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build product
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  5/11] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build auth
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 13/13] RUN pnpm run build api
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [production 6/9] COPY prisma prisma
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 3/9] RUN npm install -g pnpm
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [development 12/13] RUN pnpm exec prisma generate
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development  5/13] COPY tsconfig.json tsconfig.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.013076252002269 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 28
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/category apps/category
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.1s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [production 6/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  5/11] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/payment apps/payment
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build cart
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/customer apps/customer
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build api
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 3/9] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/9] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 4/9] COPY package.json ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/api apps/api
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [development 10/13] RUN npm install -g pnpm
#22 CACHED

#23 [production 6/9] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.001646850001067 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 29
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build discount
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.1s
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.1s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED


#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.1s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/attribute apps/attribute
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.1s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build order
#18 CACHED

#19 [development  2/11] WORKDIR /usr/src/app
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development 13/13] RUN pnpm run build customer
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/13] COPY apps/cart apps/cart
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 3/9] RUN npm install -g pnpm
#9 CACHED

#10 [production 6/9] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build api
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 [development  7/13] COPY apps/api apps/api
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  2/13] WORKDIR /usr/src/app
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0029888660013677 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 30
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/category apps/category
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.1s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#5 transferring context: 12.00kB done
#5 DONE 0.1s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/product apps/product
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build order
#15 CACHED

#16 [production 3/8] COPY package.json ./
#16 CACHED

#17 [production 4/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/payment apps/payment
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build payment
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/cart apps/cart
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 6/9] COPY prisma prisma
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 4/9] COPY package.json ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build api
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/9] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 3/9] RUN npm install -g pnpm
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [development 11/13] RUN pnpm install
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0812128200009465 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 31
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build category
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build product
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development  9/11] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  7/11] COPY apps/mail apps/mail
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  5/11] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build discount
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build order
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/auth apps/auth
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 30.43kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/cart apps/cart
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 3/9] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#22 CACHED

#23 [development  2/13] WORKDIR /usr/src/app
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9670852760002018 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 32
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [production 4/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 3/8] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build discount
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development 13/13] RUN pnpm run build attribute
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  7/13] COPY apps/auth apps/auth
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build payment
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build customer
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 6/9] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 4/9] COPY package.json ./
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/api apps/api
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [production 3/9] RUN npm install -g pnpm
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 0.0s done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.061342840999365 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 33
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 30B
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development  7/11] COPY apps/mail apps/mail
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/discount apps/discount
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build category
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/category apps/category
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [production 5/8] COPY package.json ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/order apps/order
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/cart apps/cart
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 3/9] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/api apps/api
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 6/9] COPY prisma prisma
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  3/13] COPY package.json ./
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0129371230006217 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 34
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build attribute
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  5/11] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 13/13] RUN pnpm run build order
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development 13/13] RUN pnpm run build payment
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 13/13] RUN pnpm run build api
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 6/9] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/9] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 2/9] WORKDIR /usr/src/app
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [development 10/13] RUN npm install -g pnpm
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.908837966997177 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 35
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 13/13] RUN pnpm run build discount
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 3/8] COPY package.json ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [development  7/13] COPY apps/order apps/order
#18 CACHED

#19 [production 4/8] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/category apps/category
#6 CACHED

#7 [development 13/13] RUN pnpm run build category
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development 13/13] RUN pnpm run build payment
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build cart
#12 CACHED

#13 [development  7/13] COPY apps/cart apps/cart
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build customer
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 3/9] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/13] COPY apps/api apps/api
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9127040419988335 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 36
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build discount
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development 11/11] RUN pnpm run build mail
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development 10/11] RUN pnpm install
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build order
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 0.0s done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 0.0s done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/9] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [production 3/9] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/api apps/api
#14 CACHED

#15 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development 13/13] RUN pnpm run build api
#20 CACHED

#21 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#21 CACHED

#22 [production 2/9] WORKDIR /usr/src/app
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9308607430011033 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 37
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build product
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  5/11] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build order
#9 CACHED

#10 [development  7/13] COPY apps/order apps/order
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build discount
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#5 transferring context: 2.97kB done
#5 DONE 0.1s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build attribute
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB 0.0s done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 3/9] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/9] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  7/13] COPY apps/api apps/api
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 2/9] WORKDIR /usr/src/app
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0519193420000374 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 38
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/11] COPY package.json ./
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/11] COPY apps/mail apps/mail
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s


#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/attribute apps/attribute
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build order
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  2/11] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/payment apps/payment
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  7/13] COPY apps/auth apps/auth
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/business apps/business
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/customer apps/customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/cart apps/cart
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 2/9] WORKDIR /usr/src/app
#7 CACHED

#8 [production 3/9] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 6/9] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development 13/13] RUN pnpm run build api
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 4/9] COPY package.json ./
#21 CACHED

#22 [development  7/13] COPY apps/api apps/api
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0062205290012063 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 39
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development 13/13] RUN pnpm run build attribute
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 13/13] RUN pnpm run build category
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/11] RUN pnpm run build mail
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  9/13] COPY prisma prisma
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build discount
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/api apps/api
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [production 4/9] COPY package.json ./
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.971659809999168 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 40
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 4/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 3/8] COPY package.json ./
#11 CACHED

#12 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 2/8] WORKDIR /usr/src/app
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 2/8] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 2/8] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/11] COPY apps/mail apps/mail
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [development 13/13] RUN pnpm run build category
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 2/8] WORKDIR /usr/src/app
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.84kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/attribute apps/attribute
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [production 2/8] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 2/8] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build auth
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 3/9] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 2/9] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/api apps/api
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9286642290018499 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 41
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/11] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.24kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  7/13] COPY apps/discount apps/discount
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/11] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 4/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [production 3/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/11] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.5s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.5s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/customer apps/customer
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build customer
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [production 3/9] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/api apps/api
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [production 4/9] COPY package.json ./
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [development  9/13] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.2974085740000008 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 42
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/order apps/order
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 5/8] COPY package.json ./
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  7/13] COPY apps/business apps/business
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#11 CACHED

#12 [development 13/13] RUN pnpm run build api
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [development  2/13] WORKDIR /usr/src/app
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [production 3/9] RUN npm install -g pnpm
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8845794389992951 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 43
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  5/11] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/11] COPY apps/mail apps/mail
#13 CACHED

#14 [development 11/11] RUN pnpm run build mail
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  7/13] COPY apps/product apps/product
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build product
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/category apps/category
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/order apps/order
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build discount
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build payment
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB 0.0s done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 13/13] RUN pnpm run build auth
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build customer
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  7/13] COPY apps/customer apps/customer
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  7/13] COPY apps/cart apps/cart
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 3/9] RUN npm install -g pnpm
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build api
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [development 12/13] RUN pnpm exec prisma generate
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8754774259999394 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 44
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/category apps/category
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/8] COPY package.json ./
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development 13/13] RUN pnpm run build order
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/discount apps/discount
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#21 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build payment
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/customer apps/customer
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build cart
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 6/9] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 2/9] WORKDIR /usr/src/app
#19 CACHED

#20 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#20 CACHED

#21 [production 5/9] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  5/13] COPY tsconfig.json tsconfig.json
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8183983459994197 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 45
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 3/8] COPY package.json ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development  7/13] COPY apps/order apps/order
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [production 4/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build payment
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [development 13/13] RUN pnpm run build customer
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 5/9] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 6/9] COPY prisma prisma
#15 CACHED

#16 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 [production 3/9] RUN npm install -g pnpm
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8995068790018559 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 46
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.71kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build discount
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [production 2/8] WORKDIR /usr/src/app
#7 CACHED

#8 [development  9/11] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/11] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 3/8] COPY package.json ./
#6 CACHED

#7 [production 6/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [production 2/8] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [production 4/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development  7/13] COPY apps/payment apps/payment
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  7/13] COPY apps/cart apps/cart
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build customer
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [production 3/9] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/api apps/api
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 4/9] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 5/9] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [development 12/13] RUN pnpm exec prisma generate
#21 CACHED

#22 [production 2/9] WORKDIR /usr/src/app
#22 CACHED

#23 [development  6/13] COPY nest-cli.json nest-cli.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 7.765153508998454 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 47
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  7/11] COPY apps/mail apps/mail
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/11] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 10/11] RUN pnpm install
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/11] COPY libs libs
#13 CACHED

#14 [development 11/11] RUN pnpm run build mail
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build category
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [production 5/8] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/product apps/product
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/payment apps/payment
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build customer
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 3/9] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 4/9] COPY package.json ./
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.064875787999481 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 48
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/11] RUN pnpm run build mail
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB 0.0s done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build order
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.84kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build attribute
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/attribute apps/attribute
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  7/13] COPY apps/auth apps/auth
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build cart
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 4/9] COPY package.json ./
#11 CACHED

#12 [production 3/9] RUN npm install -g pnpm
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build api
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 6/9] COPY prisma prisma
#21 CACHED

#22 [development  6/13] COPY nest-cli.json nest-cli.json
#22 CACHED

#23 [development 12/13] RUN pnpm exec prisma generate
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9394069670028984 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 49
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [production 5/8] COPY package.json ./
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  2/11] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/product apps/product
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 13/13] RUN pnpm run build product
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development 13/13] RUN pnpm run build attribute
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/13] COPY apps/business apps/business
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 3/9] RUN npm install -g pnpm
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 4/9] COPY package.json ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build api
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [development  8/13] COPY libs libs
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9959691429995001 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 50
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.1s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/11] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development 11/11] RUN pnpm run build mail
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/11] WORKDIR /usr/src/app
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.1s

#6 [development  7/13] COPY apps/product apps/product
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.1s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/order apps/order
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 4/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 3/8] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/11] WORKDIR /usr/src/app
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build discount
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/payment apps/payment
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/cart apps/cart
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 3/9] RUN npm install -g pnpm
#8 CACHED

#9 [production 2/9] WORKDIR /usr/src/app
#9 CACHED

#10 [production 4/9] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development  7/13] COPY apps/api apps/api
#20 CACHED

#21 [production 5/9] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0962288639992477 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 51
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 13/13] RUN pnpm run build category
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 6/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development 13/13] RUN pnpm run build order
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/8] COPY package.json ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 13/13] RUN pnpm run build discount
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/11] WORKDIR /usr/src/app
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/attribute apps/attribute
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build customer
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/cart apps/cart
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [development 13/13] RUN pnpm run build api
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [development  7/13] COPY apps/api apps/api
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.03979098900035 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 52
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/attribute apps/attribute
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#6 [development  7/13] COPY apps/product apps/product
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build product
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build order
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/order apps/order
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development 11/11] RUN pnpm run build mail
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build cart
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [production 2/9] WORKDIR /usr/src/app
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 4/9] COPY package.json ./
#9 CACHED

#10 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 3/9] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [production 5/9] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  3/13] COPY package.json ./
#21 CACHED

#22 [development  8/13] COPY libs libs
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.1846616040021183 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 53
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  4/11] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/attribute apps/attribute
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build product
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/8] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build customer
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/customer apps/customer
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 2/9] WORKDIR /usr/src/app
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [production 3/9] RUN npm install -g pnpm
#18 CACHED

#19 [production 4/9] COPY package.json ./
#19 CACHED

#20 [production 5/9] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.9207076350003485 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 54
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/discount apps/discount
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  7/13] COPY apps/category apps/category
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build order
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development  9/13] COPY prisma prisma
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  5/11] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development 11/11] RUN pnpm run build mail
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 13/13] RUN pnpm run build attribute
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 13/13] RUN pnpm run build payment
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build cart
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 4/9] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/9] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development 12/13] RUN pnpm exec prisma generate
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.888355000000447 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 55
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development  8/11] COPY libs libs
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/8] COPY package.json ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build product
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 13/13] RUN pnpm run build business
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/cart apps/cart
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [production 4/9] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development  6/13] COPY nest-cli.json nest-cli.json
#21 CACHED

#22 [production 2/9] WORKDIR /usr/src/app
#22 CACHED

#23 [production 3/9] RUN npm install -g pnpm
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.926359888996929 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 56
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build order
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/8] COPY package.json ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  5/11] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  4/11] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  7/13] COPY apps/category apps/category
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [development  7/13] COPY apps/product apps/product
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/payment apps/payment
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 30.43kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build cart
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 3/9] RUN npm install -g pnpm
#10 CACHED

#11 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [development 11/13] RUN pnpm install
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [production 6/9] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9374606449976564 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 57
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build product
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build attribute
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/attribute apps/attribute
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/category apps/category
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.1s

#6 [development  7/13] COPY apps/order apps/order
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 6/8] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 2/6] WORKDIR /usr/src/app
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/auth apps/auth
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build cart
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 6/9] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  7/13] COPY apps/api apps/api
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build api
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 5/9] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 4/9] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 2/9] WORKDIR /usr/src/app
#18 CACHED

#19 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [production 3/9] RUN npm install -g pnpm
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0467440959997476 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 58
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development  3/11] COPY package.json ./
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build attribute
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build product
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  7/13] COPY apps/discount apps/discount
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build discount
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/8] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/business apps/business
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a 0.0s done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build api
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [production 4/9] COPY package.json ./
#16 CACHED

#17 [production 3/9] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#20 CACHED

#21 [production 5/9] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [development 12/13] RUN pnpm exec prisma generate
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.283775460001081 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 59
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 6/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 13/13] RUN pnpm run build order
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/product apps/product
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build attribute
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/auth apps/auth
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build customer
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 3/9] RUN npm install -g pnpm
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 2/9] WORKDIR /usr/src/app
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/api apps/api
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development  5/13] COPY tsconfig.json tsconfig.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.024569788001478 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 60
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [production 6/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build category
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/attribute apps/attribute
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build cart
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  7/13] COPY apps/customer apps/customer
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 3/9] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/9] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 13/13] RUN pnpm run build api
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 6/9] COPY prisma prisma
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 4/9] COPY package.json ./
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#21 CACHED

#22 [development  7/13] COPY apps/api apps/api
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.144926288001239 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 61
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/11] RUN pnpm install
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [development 13/13] RUN pnpm run build order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build discount
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.84kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  7/13] COPY apps/attribute apps/attribute
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build cart
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 3/9] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/9] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 4/9] COPY package.json ./
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9632051970027387 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 62
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development  9/11] RUN npm install -g pnpm
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build product
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build category
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  7/13] COPY apps/category apps/category
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  7/13] COPY apps/order apps/order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 13/13] RUN pnpm run build payment
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build customer
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.24kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 4/9] COPY package.json ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 5/9] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 3/9] RUN npm install -g pnpm
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [development  6/13] COPY nest-cli.json nest-cli.json
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9501826659999788 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 63
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 5/8] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [production 6/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/attribute apps/attribute
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build product
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build category
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/payment apps/payment
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 5/9] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [production 4/9] COPY package.json ./
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [development  9/13] COPY prisma prisma
#22 CACHED

#23 [production 6/9] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.126471115000546 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 64
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  7/13] COPY apps/attribute apps/attribute
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build attribute
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/product apps/product
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 13/13] RUN pnpm run build product
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/category apps/category
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 3/8] COPY package.json ./
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 6/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [production 4/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 10/11] RUN pnpm install
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/11] RUN pnpm run build mail
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build auth
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development  7/13] COPY apps/payment apps/payment
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build api
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [production 5/9] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [production 3/9] RUN npm install -g pnpm
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [production 2/9] WORKDIR /usr/src/app
#18 CACHED

#19 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development  9/13] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.059638181000948 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 65
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.71kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 6/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/8] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  7/13] COPY apps/attribute apps/attribute
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build attribute
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build customer
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/business apps/business
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  7/13] COPY apps/cart apps/cart
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [production 6/9] COPY prisma prisma
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/api apps/api
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [production 2/9] WORKDIR /usr/src/app
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 4/9] COPY package.json ./
#21 CACHED

#22 [production 5/9] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development  3/13] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.850885579999536 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 66
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  2/11] WORKDIR /usr/src/app
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 3/8] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 13/13] RUN pnpm run build order
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [production 6/8] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 4/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/order apps/order
#18 CACHED

#19 [development  2/11] WORKDIR /usr/src/app
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.84kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build category
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build product
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/payment apps/payment
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build payment
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.1s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 13/13] RUN pnpm run build customer
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 3/9] RUN npm install -g pnpm
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.019774268001318 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 67
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/discount apps/discount
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  7/11] COPY apps/mail apps/mail
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 6/8] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [production 2/6] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build product
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/payment apps/payment
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 13/13] RUN pnpm run build cart
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/cart apps/cart
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  7/13] COPY apps/customer apps/customer
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [production 4/9] COPY package.json ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 3/9] RUN npm install -g pnpm
#11 CACHED

#12 [production 2/9] WORKDIR /usr/src/app
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/api apps/api
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development  9/13] COPY prisma prisma
#19 CACHED

#20 [development 13/13] RUN pnpm run build api
#20 CACHED

#21 [production 6/9] COPY prisma prisma
#21 CACHED

#22 [development 11/13] RUN pnpm install
#22 CACHED

#23 [development  4/13] COPY pnpm-lock.yaml ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.030241808000952 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 68
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB 0.0s done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/8] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 6/8] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/order apps/order
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 2/6] WORKDIR /usr/src/app
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  7/11] COPY apps/mail apps/mail
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development 10/11] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  9/11] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  7/13] COPY apps/attribute apps/attribute
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build product
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  7/13] COPY apps/payment apps/payment
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 4/9] COPY package.json ./
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [production 3/9] RUN npm install -g pnpm
#21 CACHED

#22 [development  9/13] COPY prisma prisma
#22 CACHED

#23 [development  6/13] COPY nest-cli.json nest-cli.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.06916927099973 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 69
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/attribute apps/attribute
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build attribute
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/product apps/product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 5/8] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/order apps/order
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build discount
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  6/11] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/11] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/cart apps/cart
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.24kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 13/13] RUN pnpm run build business
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/api apps/api
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [production 3/9] RUN npm install -g pnpm
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [production 4/9] COPY package.json ./
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [production 2/9] WORKDIR /usr/src/app
#22 CACHED

#23 [development  3/13] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.07515789699927 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 70
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build discount
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build product
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development 10/11] RUN pnpm install
#12 CACHED

#13 [development  5/11] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/8] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 6/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build attribute
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB 0.0s done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/business apps/business
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/customer apps/customer
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 3/9] RUN npm install -g pnpm
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 5/9] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [development  6/13] COPY nest-cli.json nest-cli.json
#21 CACHED

#22 [development  7/13] COPY apps/api apps/api
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.098587269000709 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 71
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 13/13] RUN pnpm run build attribute
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 10/11] RUN pnpm install
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build order
#6 CACHED

#7 [production 4/8] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [production 3/8] COPY package.json ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  7/13] COPY apps/discount apps/discount
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 13/13] RUN pnpm run build payment
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build auth
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/13] COPY apps/customer apps/customer
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build customer
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build cart
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [production 4/9] COPY package.json ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 13/13] RUN pnpm run build api
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 3/9] RUN npm install -g pnpm
#19 CACHED

#20 [production 5/9] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  9/13] COPY prisma prisma
#22 CACHED

#23 [production 6/9] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0549980240017174 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 72
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 6/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/category apps/category
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.24kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  5/11] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/11] COPY apps/mail apps/mail
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build payment
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/payment apps/payment
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/customer apps/customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  7/13] COPY apps/cart apps/cart
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build api
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 6/9] COPY prisma prisma
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development  7/13] COPY apps/api apps/api
#21 CACHED

#22 [development  8/13] COPY libs libs
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.985713530998677 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 73
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context:
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.1s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  8/11] COPY libs libs
#11 CACHED

#12 [development  5/11] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 13/13] RUN pnpm run build order
#18 CACHED

#19 [production 6/8] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build discount
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build payment
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 0.0s done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 30.43kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/cart apps/cart
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build cart
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 0.0s done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/customer apps/customer
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 2/9] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/9] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 3/9] RUN npm install -g pnpm
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/api apps/api
#18 CACHED

#19 [development 13/13] RUN pnpm run build api
#19 CACHED

#20 [production 4/9] COPY package.json ./
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [development 10/13] RUN npm install -g pnpm
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0299787129983304 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 74
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  7/13] COPY apps/product apps/product
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [development 13/13] RUN pnpm run build order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/11] COPY libs libs
#13 CACHED

#14 [development 11/11] RUN pnpm run build mail
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  7/13] COPY apps/business apps/business
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 2/9] WORKDIR /usr/src/app
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 3/9] RUN npm install -g pnpm
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development 13/13] RUN pnpm run build api
#19 CACHED

#20 [production 4/9] COPY package.json ./
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#22 CACHED

#23 [development  3/13] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8505717500001193 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 75
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/attribute apps/attribute
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  2/11] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build order
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/11] WORKDIR /usr/src/app
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  7/13] COPY apps/order apps/order
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 24.90kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build product
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build discount
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development 13/13] RUN pnpm run build category
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [development  5/11] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  7/11] COPY apps/mail apps/mail
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build payment
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development  7/13] COPY apps/cart apps/cart
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 13/13] RUN pnpm run build customer
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 3/9] RUN npm install -g pnpm
#11 CACHED

#12 [production 4/9] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 2/9] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#20 CACHED

#21 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#21 CACHED

#22 [development 13/13] RUN pnpm run build api
#22 CACHED

#23 [production 5/9] COPY pnpm-lock.yaml ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9137063249982893 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 76
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 13/13] RUN pnpm run build category
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  5/11] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development  9/13] COPY prisma prisma
#19 CACHED

#20 [production 2/6] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.24kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build cart
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/13] COPY apps/api apps/api
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 4/9] COPY package.json ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build api
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 3/9] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [development 12/13] RUN pnpm exec prisma generate
#22 CACHED

#23 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.340542221002281 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 77
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build category
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build discount
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 4/6] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 13/13] RUN pnpm run build attribute
#14 CACHED

#15 [development  7/13] COPY apps/attribute apps/attribute
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/auth apps/auth
#13 CACHED

#14 [development 13/13] RUN pnpm run build auth
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/payment apps/payment
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build payment
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build cart
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  7/13] COPY apps/cart apps/cart
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 5/8] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build order
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 6/8] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  6/13] COPY nest-cli.json nest-cli.json
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build api
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 6/9] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  7/13] COPY apps/api apps/api
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.402018355000764 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 78
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/category apps/category
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  7/13] COPY apps/attribute apps/attribute
#10 CACHED

#11 [development 13/13] RUN pnpm run build attribute
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build discount
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [development 13/13] RUN pnpm run build order
#15 CACHED

#16 [production 5/8] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 2/6] WORKDIR /usr/src/app
#19 CACHED

#20 [production 6/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/13] COPY apps/payment apps/payment
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 13/13] RUN pnpm run build customer
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/cart apps/cart
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  7/13] COPY apps/product apps/product
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build api
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 6/9] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/api apps/api
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 3/9] RUN npm install -g pnpm
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#21 CACHED

#22 [development  6/13] COPY nest-cli.json nest-cli.json
#22 CACHED

#23 [development  2/13] WORKDIR /usr/src/app
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.32183711199835 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 79
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build product
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 4/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/8] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/order apps/order
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 3/8] COPY package.json ./
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.58kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/11] COPY apps/mail apps/mail
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/11] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/11] COPY libs libs
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development 11/11] RUN pnpm run build mail
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build category
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  7/13] COPY apps/discount apps/discount
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build payment
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/payment apps/payment
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build auth
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  7/13] COPY apps/auth apps/auth
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build cart
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/api apps/api
#6 CACHED

#7 [production 2/9] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [production 4/9] COPY package.json ./
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 6/9] COPY prisma prisma
#17 CACHED

#18 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#18 CACHED

#19 [development 13/13] RUN pnpm run build api
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [development  6/13] COPY nest-cli.json nest-cli.json
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.00909577799961 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 80
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [production 3/6] COPY package.json ./
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.2s
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB 0.0s done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build discount
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  7/13] COPY apps/category apps/category
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  7/13] COPY apps/product apps/product
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build product
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 13/13] RUN pnpm run build attribute
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/auth apps/auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 13/13] RUN pnpm run build auth
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.1s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a 0.0s done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build api
#6 CACHED

#7 [production 4/9] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development  5/13] COPY tsconfig.json tsconfig.json
#19 CACHED

#20 [development  6/13] COPY nest-cli.json nest-cli.json
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [development 11/13] RUN pnpm install
#22 CACHED

#23 [development  7/13] COPY apps/api apps/api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0683614360019567 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 81
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#2 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build product
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build order
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development  9/13] COPY prisma prisma
#19 CACHED

#20 [development 12/13] RUN pnpm exec prisma generate
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  9/11] RUN npm install -g pnpm
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build attribute
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  7/13] COPY apps/attribute apps/attribute
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build customer
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB 0.0s done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  7/13] COPY apps/cart apps/cart
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 6/9] COPY prisma prisma
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 2/9] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/api apps/api
#11 CACHED

#12 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#12 CACHED

#13 [production 5/9] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 3/9] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 4/9] COPY package.json ./
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#22 CACHED

#23 [development  6/13] COPY nest-cli.json nest-cli.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9783164650015532 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 82
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/11] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.84kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/attribute apps/attribute
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  7/13] COPY apps/product apps/product
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 3/8] COPY package.json ./
#9 CACHED

#10 [production 6/8] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [production 4/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development 13/13] RUN pnpm run build order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  4/11] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  6/11] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B 0.0s done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B 0.0s done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 13/13] RUN pnpm run build auth
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.24kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/business apps/business
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 0.0s done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [production 6/9] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#18 CACHED

#19 [production 5/9] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [production 3/9] RUN npm install -g pnpm
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.928627598002553 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 83
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development 11/11] RUN pnpm run build mail
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/11] COPY package.json ./
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.1s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build product
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/discount apps/discount
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 13/13] RUN pnpm run build order
#9 CACHED

#10 [production 5/8] COPY package.json ./
#10 CACHED

#11 [production 6/8] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build business
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/cart apps/cart
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build customer
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  7/13] COPY apps/customer apps/customer
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 3/9] RUN npm install -g pnpm
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/api apps/api
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [production 6/9] COPY prisma prisma
#15 CACHED

#16 [production 2/9] WORKDIR /usr/src/app
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [production 5/9] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  9/13] COPY prisma prisma
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  5/13] COPY tsconfig.json tsconfig.json
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.92708037199825 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 84
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.85kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [development  6/11] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  8/11] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/11] RUN npm install -g pnpm
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [production 6/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  7/13] COPY apps/product apps/product
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 13/13] RUN pnpm run build product
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/attribute apps/attribute
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build attribute
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB 0.0s done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build auth
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 13/13] RUN pnpm run build cart
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build api
#6 CACHED

#7 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 6/9] COPY prisma prisma
#8 CACHED

#9 [production 5/9] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  7/13] COPY apps/api apps/api
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [production 4/9] COPY package.json ./
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [development  8/13] COPY libs libs
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 3/9] RUN npm install -g pnpm
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [development 10/13] RUN npm install -g pnpm
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.034945041999221 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 85
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build attribute
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 10/11] RUN pnpm install
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/11] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  4/11] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  7/13] COPY apps/product apps/product
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/8] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build order
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [production 6/8] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  7/13] COPY apps/order apps/order
#18 CACHED

#19 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [production 2/6] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/auth apps/auth
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/business apps/business
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build business
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [production 4/9] COPY package.json ./
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 13/13] RUN pnpm run build api
#9 CACHED

#10 [production 5/9] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [development 10/13] RUN npm install -g pnpm
#21 CACHED

#22 [production 3/9] RUN npm install -g pnpm
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0146432290002703 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 86
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/11] RUN pnpm run build mail
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/attribute apps/attribute
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build attribute
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/category apps/category
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build category
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/11] WORKDIR /usr/src/app
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  7/13] COPY apps/discount apps/discount
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  2/11] WORKDIR /usr/src/app
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build product
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 13/13] RUN pnpm run build order
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 5/8] COPY package.json ./
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 6/8] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [development  2/11] WORKDIR /usr/src/app
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 13/13] RUN pnpm run build auth
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build customer
#13 CACHED

#14 [development  7/13] COPY apps/customer apps/customer
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [production 3/6] COPY package.json ./
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 6/9] COPY prisma prisma
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build api
#16 CACHED

#17 [production 3/9] RUN npm install -g pnpm
#17 CACHED

#18 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [development  3/13] COPY package.json ./
#20 CACHED

#21 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development  8/13] COPY libs libs
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9064194459989667 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 87
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/discount apps/discount
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  8/11] COPY libs libs
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/11] COPY apps/mail apps/mail
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  3/11] COPY package.json ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 10/11] RUN pnpm install
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build order
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  7/13] COPY apps/product apps/product
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build product
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build payment
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build auth
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/13] COPY apps/auth apps/auth
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/business apps/business
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build customer
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/customer apps/customer
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 3/9] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [production 6/9] COPY prisma prisma
#15 CACHED

#16 [development  7/13] COPY apps/api apps/api
#16 CACHED

#17 [production 5/9] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [development 12/13] RUN pnpm exec prisma generate
#22 CACHED

#23 [production 4/9] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9367966540008783 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 88
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile:
#1 [internal] load .dockerignore
#1 transferring context:
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 DONE 0.0s
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#1 transferring context: 76B done
#1 DONE 0.1s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build discount
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 2/6] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 5/8] COPY package.json ./
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 6/8] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/11] COPY package.json ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/11] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/11] COPY apps/mail apps/mail
#13 CACHED

#14 [development 11/11] RUN pnpm run build mail
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  7/13] COPY apps/attribute apps/attribute
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/auth apps/auth
#7 CACHED

#8 [development 13/13] RUN pnpm run build auth
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.24kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/business apps/business
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 2/6] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/13] COPY apps/cart apps/cart
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build customer
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/customer apps/customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [production 2/9] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/9] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 6/9] COPY prisma prisma
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [production 4/9] COPY package.json ./
#21 CACHED

#22 [development  4/13] COPY pnpm-lock.yaml ./
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.035888764999807 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 89
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context:
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 transferring context: 76B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.1s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  7/13] COPY apps/category apps/category
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 2/6] WORKDIR /usr/src/app
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#5 transferring context: 5.81kB done
#5 DONE 0.1s

#6 [development 10/11] RUN pnpm install
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  3/11] COPY package.json ./
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development 11/11] RUN pnpm run build mail
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/11] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.1s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build discount
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 3/6] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [production 4/6] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/discount apps/discount
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#5 DONE 0.1s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [production 2/6] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#5 transferring context: 2.97kB done
#5 DONE 0.1s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  7/13] COPY apps/attribute apps/attribute
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#5 transferring context: 2.84kB done
#5 DONE 0.1s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [production 2/6] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/auth apps/auth
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [production 3/6] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build cart
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 2/6] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build business
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  7/13] COPY apps/api apps/api
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 4/9] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build api
#15 CACHED

#16 [production 5/9] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/9] COPY prisma prisma
#19 CACHED

#20 [production 3/9] RUN npm install -g pnpm
#20 CACHED

#21 [development  6/13] COPY nest-cli.json nest-cli.json
#21 CACHED

#22 [development  9/13] COPY prisma prisma
#22 CACHED

#23 [production 2/9] WORKDIR /usr/src/app
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0591070260033013 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 90
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development 13/13] RUN pnpm run build discount
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 13/13] RUN pnpm run build attribute
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/attribute apps/attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 13/13] RUN pnpm run build category
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 13/13] RUN pnpm run build product
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 3/6] COPY package.json ./
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [production 6/8] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development 13/13] RUN pnpm run build order
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  5/13] COPY tsconfig.json tsconfig.json
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/11] RUN pnpm install
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  6/11] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/11] COPY libs libs
#10 CACHED

#11 [development 11/11] RUN pnpm run build mail
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development  4/11] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  7/11] COPY apps/mail apps/mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/13] COPY apps/payment apps/payment
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development 13/13] RUN pnpm run build cart
#15 CACHED

#16 [development  7/13] COPY apps/cart apps/cart
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build business
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 3/9] RUN npm install -g pnpm
#6 CACHED

#7 [production 6/9] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/api apps/api
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [production 5/9] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 4/9] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development 13/13] RUN pnpm run build api
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [development 12/13] RUN pnpm exec prisma generate
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.8726167399995028 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 91
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 3/8] COPY package.json ./
#9 CACHED

#10 [production 2/8] WORKDIR /usr/src/app
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/8] COPY package.json ./
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  7/13] COPY apps/order apps/order
#16 CACHED

#17 [production 4/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  4/11] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  7/11] COPY apps/mail apps/mail
#8 CACHED

#9 [development  8/11] COPY libs libs
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  9/11] RUN npm install -g pnpm
#11 CACHED

#12 [development  5/11] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 11/11] RUN pnpm run build mail
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [production 2/8] WORKDIR /usr/src/app
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  7/13] COPY apps/discount apps/discount
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [production 2/8] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build attribute
#10 CACHED

#11 [production 2/8] WORKDIR /usr/src/app
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 2/8] WORKDIR /usr/src/app
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/8] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.96kB done
#5 DONE 0.0s

#6 [production 2/8] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/13] COPY apps/category apps/category
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 13/13] RUN pnpm run build category
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  7/13] COPY apps/payment apps/payment
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 4/6] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [production 2/6] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build cart
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a 0.0s done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/business apps/business
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build business
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 0.0s done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.51kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 0.0s done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 13/13] RUN pnpm run build api
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [production 3/9] RUN npm install -g pnpm
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#19 CACHED

#20 [production 5/9] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  6/13] COPY nest-cli.json nest-cli.json
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [development  5/13] COPY tsconfig.json tsconfig.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9259066610001028 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 92
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build attribute
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.84kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/product apps/product
#7 CACHED

#8 [development 13/13] RUN pnpm run build product
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/11] COPY libs libs
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/11] COPY package.json ./
#11 CACHED

#12 [development  9/11] RUN npm install -g pnpm
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 13/13] RUN pnpm run build category
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  7/13] COPY apps/category apps/category
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [production 6/8] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  7/13] COPY apps/order apps/order
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [production 5/8] COPY package.json ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/auth apps/auth
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/payment apps/payment
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/customer apps/customer
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build customer
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 13/13] RUN pnpm run build business
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  7/13] COPY apps/business apps/business
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [production 4/9] COPY package.json ./
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/api apps/api
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development 13/13] RUN pnpm run build api
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development  2/13] WORKDIR /usr/src/app
#19 CACHED

#20 [production 5/9] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  4/13] COPY pnpm-lock.yaml ./
#21 CACHED

#22 [development  9/13] COPY prisma prisma
#22 CACHED

#23 [development 11/13] RUN pnpm install
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9769353160001337 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 93
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  7/13] COPY apps/product apps/product
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  4/11] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 10/11] RUN pnpm install
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development  8/11] COPY libs libs
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  7/13] COPY apps/attribute apps/attribute
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development 13/13] RUN pnpm run build attribute
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 18.18kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 6/8] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development  4/13] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  7/13] COPY apps/discount apps/discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 2/6] WORKDIR /usr/src/app
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [production 4/6] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  7/13] COPY apps/cart apps/cart
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 13/13] RUN pnpm run build cart
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 13/13] RUN pnpm run build customer
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/customer apps/customer
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development  7/13] COPY apps/business apps/business
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build business
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 0.0s done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 3/9] RUN npm install -g pnpm
#6 CACHED

#7 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [production 6/9] COPY prisma prisma
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build api
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [production 5/9] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [development  7/13] COPY apps/api apps/api
#21 CACHED

#22 [development 10/13] RUN npm install -g pnpm
#22 CACHED

#23 [development  2/13] WORKDIR /usr/src/app
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9256205819994212 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 94
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.97kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build attribute
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/product apps/product
#8 CACHED

#9 [development 13/13] RUN pnpm run build product
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 11/13] RUN pnpm install
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  5/11] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  4/11] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [development  6/11] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  3/11] COPY package.json ./
#15 CACHED

#16 [development 11/11] RUN pnpm run build mail
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 12/13] RUN pnpm exec prisma generate
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 13/13] RUN pnpm run build discount
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/order apps/order
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 13/13] RUN pnpm run build order
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 5/8] COPY package.json ./
#19 CACHED

#20 [development  2/13] WORKDIR /usr/src/app
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/auth apps/auth
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development 13/13] RUN pnpm run build auth
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build payment
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [development 13/13] RUN pnpm run build cart
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 3/6] COPY package.json ./
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  7/13] COPY apps/cart apps/cart
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  7/13] COPY apps/customer apps/customer
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/9] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 6/9] COPY prisma prisma
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#14 CACHED

#15 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 4/9] COPY package.json ./
#18 CACHED

#19 [development  7/13] COPY apps/api apps/api
#19 CACHED

#20 [development  8/13] COPY libs libs
#20 CACHED

#21 [production 3/9] RUN npm install -g pnpm
#21 CACHED

#22 [development 11/13] RUN pnpm install
#22 CACHED

#23 [development  6/13] COPY nest-cli.json nest-cli.json
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.9701490550003946 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 95
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/discount apps/discount
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [development  7/13] COPY apps/order apps/order
#14 CACHED

#15 [production 3/8] COPY package.json ./
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [production 4/8] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/8] COPY package.json ./
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [production 6/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development  9/11] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/11] RUN pnpm run build mail
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development  7/11] COPY apps/mail apps/mail
#9 CACHED

#10 [development  5/11] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/11] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/11] COPY package.json ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  4/11] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 23.84kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/attribute apps/attribute
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 13/13] RUN pnpm run build attribute
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development  7/13] COPY apps/category apps/category
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/product apps/product
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build product
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 0.0s done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development 13/13] RUN pnpm run build auth
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build payment
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  7/13] COPY apps/payment apps/payment
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development 13/13] RUN pnpm run build cart
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  7/13] COPY apps/business apps/business
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [production 5/9] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [production 3/9] RUN npm install -g pnpm
#10 CACHED

#11 [production 4/9] COPY package.json ./
#11 CACHED

#12 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/api apps/api
#15 CACHED

#16 [production 6/9] COPY prisma prisma
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development  8/13] COPY libs libs
#21 CACHED

#22 [development  2/13] WORKDIR /usr/src/app
#22 CACHED

#23 [development 13/13] RUN pnpm run build api
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 1.915690247002989 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 96
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  7/11] COPY apps/mail apps/mail
#6 CACHED

#7 [development  4/11] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 10/11] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  3/11] COPY package.json ./
#10 CACHED

#11 [development  2/11] WORKDIR /usr/src/app
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development  5/11] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  7/13] COPY apps/product apps/product
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/11] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development 13/13] RUN pnpm run build product
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build category
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  2/11] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  7/13] COPY apps/order apps/order
#8 CACHED

#9 [production 5/8] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 13/13] RUN pnpm run build order
#13 CACHED

#14 [production 6/8] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [development 10/13] RUN npm install -g pnpm
#19 CACHED

#20 [development 11/13] RUN pnpm install
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/attribute apps/attribute
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 13/13] RUN pnpm run build attribute
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [production 3/6] COPY package.json ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  7/13] COPY apps/discount apps/discount
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/11] WORKDIR /usr/src/app
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development  8/13] COPY libs libs
#13 CACHED

#14 [production 2/6] WORKDIR /usr/src/app
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  7/13] COPY apps/auth apps/auth
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 4/6] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  7/13] COPY apps/payment apps/payment
#16 CACHED

#17 [development 10/13] RUN npm install -g pnpm
#17 CACHED

#18 [development 13/13] RUN pnpm run build payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 13/13] RUN pnpm run build customer
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  5/13] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/customer apps/customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [development 13/13] RUN pnpm run build cart
#12 CACHED

#13 [development  7/13] COPY apps/cart apps/cart
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 13/13] RUN pnpm run build business
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 3/6] COPY package.json ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  7/13] COPY apps/business apps/business
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 4/9] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/api apps/api
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [production 5/9] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development 12/13] RUN pnpm exec prisma generate
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [development 13/13] RUN pnpm run build api
#19 CACHED

#20 [production 6/9] COPY prisma prisma
#20 CACHED

#21 [production 2/9] WORKDIR /usr/src/app
#21 CACHED

#22 [production 3/9] RUN npm install -g pnpm
#22 CACHED

#23 [development  3/13] COPY package.json ./
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0644810700006784 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 97
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  7/13] COPY apps/order apps/order
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [production 5/8] COPY package.json ./
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [development 13/13] RUN pnpm run build order
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development 11/11] RUN pnpm run build mail
#6 CACHED

#7 [development  6/11] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 4/6] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development  9/11] RUN npm install -g pnpm
#13 CACHED

#14 [development  7/11] COPY apps/mail apps/mail
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  8/11] COPY libs libs
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 3/6] COPY package.json ./
#8 CACHED

#9 [production 4/6] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  7/13] COPY apps/attribute apps/attribute
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development 13/13] RUN pnpm run build attribute
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development 13/13] RUN pnpm run build category
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/category apps/category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/discount apps/discount
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build discount
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [production 4/6] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build product
#11 CACHED

#12 [development  7/13] COPY apps/product apps/product
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 0.0s done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd 0.0s done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 20.89kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development 13/13] RUN pnpm run build payment
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 10/13] RUN npm install -g pnpm
#16 CACHED

#17 [development  7/13] COPY apps/payment apps/payment
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  7/13] COPY apps/auth apps/auth
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  7/13] COPY apps/customer apps/customer
#9 CACHED

#10 [production 2/6] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development  4/13] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 13/13] RUN pnpm run build customer
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development  7/13] COPY apps/business apps/business
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 4/6] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development 13/13] RUN pnpm run build business
#14 CACHED

#15 [production 2/6] WORKDIR /usr/src/app
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [production 2/6] WORKDIR /usr/src/app
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development  7/13] COPY apps/cart apps/cart
#11 CACHED

#12 [development 13/13] RUN pnpm run build cart
#12 CACHED

#13 [development  9/13] COPY prisma prisma
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [production 3/9] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/9] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [production 4/9] COPY package.json ./
#8 CACHED

#9 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build api
#17 CACHED

#18 [development  9/13] COPY prisma prisma
#18 CACHED

#19 [development  3/13] COPY package.json ./
#19 CACHED

#20 [development 10/13] RUN npm install -g pnpm
#20 CACHED

#21 [development 11/13] RUN pnpm install
#21 CACHED

#22 [development  7/13] COPY apps/api apps/api
#22 CACHED

#23 [production 6/9] COPY prisma prisma
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0663322719968855 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 98
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 619B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.0s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/13] COPY apps/category apps/category
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 13/13] RUN pnpm run build category
#16 CACHED

#17 [development  2/11] WORKDIR /usr/src/app
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB done
#5 DONE 0.0s

#6 [development  3/11] COPY package.json ./
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [development  6/11] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [development  7/11] COPY apps/mail apps/mail
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  4/11] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/11] RUN pnpm install
#13 CACHED

#14 [development  8/11] COPY libs libs
#14 CACHED

#15 [development  5/11] COPY tsconfig.json tsconfig.json
#15 CACHED

#16 [development  9/11] RUN npm install -g pnpm
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s

#6 [development  2/11] WORKDIR /usr/src/app
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [production 6/8] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [production 5/8] COPY package.json ./
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  6/13] COPY nest-cli.json nest-cli.json
#14 CACHED

#15 [development  7/13] COPY apps/order apps/order
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [development 13/13] RUN pnpm run build order
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  2/11] WORKDIR /usr/src/app
#10 CACHED

#11 [development  9/13] COPY prisma prisma
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  7/13] COPY apps/product apps/product
#17 CACHED

#18 [development 13/13] RUN pnpm run build product
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED
#3 DONE 0.1s

#4 [development  1/11] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.1s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  2/11] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 13/13] RUN pnpm run build attribute
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  7/13] COPY apps/attribute apps/attribute
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  7/13] COPY apps/payment apps/payment
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development  8/13] COPY libs libs
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development 13/13] RUN pnpm run build payment
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 34.71kB done
#5 DONE 0.0s

#6 [development  3/13] COPY package.json ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  7/13] COPY apps/auth apps/auth
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build auth
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  2/13] WORKDIR /usr/src/app
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  7/13] COPY apps/business apps/business
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [production 3/6] COPY package.json ./
#11 CACHED

#12 [development 13/13] RUN pnpm run build business
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [production 4/6] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  7/13] COPY apps/customer apps/customer
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  3/13] COPY package.json ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build customer
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [production 1/6] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [production 4/6] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build discount
#8 CACHED

#9 [production 2/6] WORKDIR /usr/src/app
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  7/13] COPY apps/discount apps/discount
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [production 3/6] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  5/13] COPY tsconfig.json tsconfig.json
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  7/13] COPY apps/cart apps/cart
#12 CACHED

#13 [development 13/13] RUN pnpm run build cart
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development 12/13] RUN pnpm exec prisma generate
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB 0.0s done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build api
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  4/13] COPY pnpm-lock.yaml ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/9] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [production 6/9] COPY prisma prisma
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 2/9] WORKDIR /usr/src/app
#15 CACHED

#16 [production 3/9] RUN npm install -g pnpm
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 [development  7/13] COPY apps/api apps/api
#20 CACHED

#21 [development  9/13] COPY prisma prisma
#21 CACHED

#22 [production 4/9] COPY package.json ./
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 4.869009975999594 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 99
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile:
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 718B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 994B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB 0.0s done
#5 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.28kB done
#5 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [development  2/13] WORKDIR /usr/src/app
#11 CACHED

#12 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#12 CACHED

#13 [development  7/13] COPY apps/product apps/product
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build product
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  5/13] COPY tsconfig.json tsconfig.json
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB 0.0s done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [development 10/13] RUN npm install -g pnpm
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development 13/13] RUN pnpm run build discount
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development  7/13] COPY apps/discount apps/discount
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development  7/13] COPY apps/category apps/category
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 10/13] RUN npm install -g pnpm
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  9/13] COPY prisma prisma
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development 13/13] RUN pnpm run build category
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.81kB 0.0s done
#5 DONE 0.0s

#6 [development  6/11] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [development  3/11] COPY package.json ./
#7 CACHED

#8 [development  5/11] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  9/11] RUN npm install -g pnpm
#10 CACHED

#11 [development  4/11] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  7/11] COPY apps/mail apps/mail
#12 CACHED

#13 [development 11/11] RUN pnpm run build mail
#13 CACHED

#14 [development 10/11] RUN pnpm install
#14 CACHED

#15 [development  8/11] COPY libs libs
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 0.0s done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 11/13] RUN pnpm install
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development  7/13] COPY apps/attribute apps/attribute
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 13/13] RUN pnpm run build attribute
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 0.0s done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s

#6 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#6 CACHED

#7 [development  2/13] WORKDIR /usr/src/app
#7 CACHED

#8 [production 5/8] COPY package.json ./
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  3/13] COPY package.json ./
#10 CACHED

#11 [development  8/13] COPY libs libs
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  4/13] COPY pnpm-lock.yaml ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  9/13] COPY prisma prisma
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development 13/13] RUN pnpm run build order
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development  7/13] COPY apps/order apps/order
#19 CACHED

#20 [production 6/8] COPY pnpm-lock.yaml ./
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 983B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development  6/13] COPY nest-cli.json nest-cli.json
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 10/13] RUN npm install -g pnpm
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development  5/13] COPY tsconfig.json tsconfig.json
#16 CACHED

#17 [development 13/13] RUN pnpm run build auth
#17 CACHED

#18 [development  7/13] COPY apps/auth apps/auth
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  4/13] COPY pnpm-lock.yaml ./
#7 CACHED

#8 [development 13/13] RUN pnpm run build payment
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  3/13] COPY package.json ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  5/13] COPY tsconfig.json tsconfig.json
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  8/13] COPY libs libs
#16 CACHED

#17 [development  6/13] COPY nest-cli.json nest-cli.json
#17 CACHED

#18 [development  7/13] COPY apps/payment apps/payment
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 989B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 965B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 988B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development 11/13] RUN pnpm install
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  2/13] WORKDIR /usr/src/app
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development 13/13] RUN pnpm run build business
#11 CACHED

#12 [development  3/13] COPY package.json ./
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  4/13] COPY pnpm-lock.yaml ./
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [development  7/13] COPY apps/business apps/business
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build cart
#9 CACHED

#10 [development  7/13] COPY apps/cart apps/cart
#10 CACHED

#11 [development  4/13] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development 11/13] RUN pnpm install
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development  3/13] COPY package.json ./
#14 CACHED

#15 [development 12/13] RUN pnpm exec prisma generate
#15 CACHED

#16 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  2/13] WORKDIR /usr/src/app
#8 CACHED

#9 [development 13/13] RUN pnpm run build customer
#9 CACHED

#10 [development  9/13] COPY prisma prisma
#10 CACHED

#11 [development  7/13] COPY apps/customer apps/customer
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  3/13] COPY package.json ./
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#15 CACHED

#16 [development 11/13] RUN pnpm install
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development 13/13] RUN pnpm run build api
#9 CACHED

#10 [development 12/13] RUN pnpm exec prisma generate
#10 CACHED

#11 [production 5/9] COPY pnpm-lock.yaml ./
#11 CACHED

#12 [development  6/13] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [production 4/9] COPY package.json ./
#13 CACHED

#14 [development 11/13] RUN pnpm install
#14 CACHED

#15 [production 3/9] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/api apps/api
#16 CACHED

#17 [development  5/13] COPY tsconfig.json tsconfig.json
#17 CACHED

#18 [development 10/13] RUN npm install -g pnpm
#18 CACHED

#19 [development  4/13] COPY pnpm-lock.yaml ./
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [development  3/13] COPY package.json ./
#21 CACHED

#22 [production 6/9] COPY prisma prisma
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-mail-1  Running
 Container gift-ms-postgres-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.1412426519989967 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        
          ===============================
          Deploy run: 100
          ===============================
          Standard output
          ===============================
          
> gift-ms@1.0.0 deploy:no-tests-cache
> docker compose build && docker compose up -d

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 619B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 994B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 718B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.58kB done
#5 DONE 0.0s

#6 [development  2/13] WORKDIR /usr/src/app
#6 CACHED

#7 [development  9/11] RUN npm install -g pnpm
#7 CACHED

#8 [development  8/11] COPY libs libs
#8 CACHED

#9 [development 11/11] RUN pnpm run build mail
#9 CACHED

#10 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#10 CACHED

#11 [development  5/11] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  6/11] COPY nest-cli.json nest-cli.json
#12 CACHED

#13 [development  7/11] COPY apps/mail apps/mail
#13 CACHED

#14 [development  4/11] COPY pnpm-lock.yaml ./
#14 CACHED

#15 [development 10/11] RUN pnpm install
#15 CACHED

#16 [development  3/11] COPY package.json ./
#16 CACHED

#17 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development 12/13] RUN pnpm exec prisma generate
#7 CACHED

#8 [development  5/13] COPY tsconfig.json tsconfig.json
#8 CACHED

#9 [development  7/13] COPY apps/discount apps/discount
#9 CACHED

#10 [production 3/6] COPY package.json ./
#10 CACHED

#11 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development 11/13] RUN pnpm install
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  2/13] WORKDIR /usr/src/app
#15 CACHED

#16 [development  6/13] COPY nest-cli.json nest-cli.json
#16 CACHED

#17 [production 4/6] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [development 13/13] RUN pnpm run build discount
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:29729ea6e7419bf30f260919822884b95a2da82d93752072246c51f606f80ae4 done
#20 naming to docker.io/library/gift-ms-discount done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.00kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build product
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  3/13] COPY package.json ./
#9 CACHED

#10 [development  5/13] COPY tsconfig.json tsconfig.json
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  8/13] COPY libs libs
#12 CACHED

#13 [development  2/13] WORKDIR /usr/src/app
#13 CACHED

#14 [development 12/13] RUN pnpm exec prisma generate
#14 CACHED

#15 [development  7/13] COPY apps/product apps/product
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  4/13] COPY pnpm-lock.yaml ./
#17 CACHED

#18 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:0a1bba6a5b07031d18bd7f0b220bb2dfc3cfcd7507886aacb526e47375b17646 done
#20 naming to docker.io/library/gift-ms-product done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.93kB done
#5 DONE 0.0s

#6 [development  8/13] COPY libs libs
#6 CACHED

#7 [development 13/13] RUN pnpm run build attribute
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development  9/13] COPY prisma prisma
#9 CACHED

#10 [development  2/13] WORKDIR /usr/src/app
#10 CACHED

#11 [development 12/13] RUN pnpm exec prisma generate
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [development  6/13] COPY nest-cli.json nest-cli.json
#13 CACHED

#14 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#14 CACHED

#15 [development 10/13] RUN npm install -g pnpm
#15 CACHED

#16 [development  7/13] COPY apps/attribute apps/attribute
#16 CACHED

#17 [development 11/13] RUN pnpm install
#17 CACHED

#18 [development  4/13] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:3273bbc16b65d014bf1a956499e4aa434ba90cceba851b4591bcfd2a714738e8 done
#20 naming to docker.io/library/gift-ms-attribute done
#20 DONE 0.0s
#18 writing image sha256:647a5526e23ddee897d3c0bc1b2312908921ac2094604340495c1f83d64eff98 done
#18 naming to docker.io/library/gift-ms-mail done
#18 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 10.81kB done
#5 DONE 0.0s

#6 [development 13/13] RUN pnpm run build category
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  9/13] COPY prisma prisma
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development  6/13] COPY nest-cli.json nest-cli.json
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  2/13] WORKDIR /usr/src/app
#12 CACHED

#13 [production 3/6] COPY package.json ./
#13 CACHED

#14 [development  8/13] COPY libs libs
#14 CACHED

#15 [development 11/13] RUN pnpm install
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  7/13] COPY apps/category apps/category
#17 CACHED

#18 [production 4/6] COPY pnpm-lock.yaml ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:abbe14ef7724bf0de2e312915d86b3b4a4081924f7846593a6c2249bfdddc4fd done
#20 naming to docker.io/library/gift-ms-category done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 2.83kB done
#5 DONE 0.0s

#6 [development  9/13] COPY prisma prisma
#6 CACHED

#7 [development  5/13] COPY tsconfig.json tsconfig.json
#7 CACHED

#8 [development  6/13] COPY nest-cli.json nest-cli.json
#8 CACHED

#9 [development  4/13] COPY pnpm-lock.yaml ./
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  7/13] COPY apps/order apps/order
#11 CACHED

#12 [production 6/8] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 10/13] RUN npm install -g pnpm
#13 CACHED

#14 [development 13/13] RUN pnpm run build order
#14 CACHED

#15 [production 5/8] COPY package.json ./
#15 CACHED

#16 [development  3/13] COPY package.json ./
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  8/13] COPY libs libs
#18 CACHED

#19 [development 12/13] RUN pnpm exec prisma generate
#19 CACHED

#20 [production 7/8] COPY --from=development /usr/src/app/node_modules ./node_modules
#20 CACHED

#21 [production 8/8] COPY --from=development /usr/src/app/dist ./dist
#21 CACHED

#22 exporting to image
#22 exporting layers done
#22 writing image sha256:25e8b906981f7ce0845aa78fd46d4a567d921acbd626a28ee415af1721208a47 0.0s done
#22 naming to docker.io/library/gift-ms-order done
#22 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 983B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 7.99kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [development  3/13] COPY package.json ./
#7 CACHED

#8 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  7/13] COPY apps/payment apps/payment
#11 CACHED

#12 [development 13/13] RUN pnpm run build payment
#12 CACHED

#13 [development 12/13] RUN pnpm exec prisma generate
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  6/13] COPY nest-cli.json nest-cli.json
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development 11/13] RUN pnpm install
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:4c85b3cc61c44f7566de3a68098f01bfc15e9500aea4a16a972548abe7030f53 done
#20 naming to docker.io/library/gift-ms-payment done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 21.81kB done
#5 DONE 0.0s

#6 [development 11/13] RUN pnpm install
#6 CACHED

#7 [development 10/13] RUN npm install -g pnpm
#7 CACHED

#8 [development  3/13] COPY package.json ./
#8 CACHED

#9 [development 13/13] RUN pnpm run build auth
#9 CACHED

#10 [development  4/13] COPY pnpm-lock.yaml ./
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  5/13] COPY tsconfig.json tsconfig.json
#12 CACHED

#13 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#13 CACHED

#14 [development  7/13] COPY apps/auth apps/auth
#14 CACHED

#15 [development  8/13] COPY libs libs
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  9/13] COPY prisma prisma
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:d301bc2c75c347eb99e34d8a7bd88932a9bd04ecc630e5246158df675a9405e9 done
#20 naming to docker.io/library/gift-ms-auth done
#20 DONE 0.0s
#1 [internal] load .dockerignore
#1 DONE 0.0s

#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 965B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 988B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s
#1 [internal] load .dockerignore
#1 transferring context: 76B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 989B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 17.53kB done
#5 DONE 0.0s

#6 [development  4/13] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  6/13] COPY nest-cli.json nest-cli.json
#7 CACHED

#8 [development 12/13] RUN pnpm exec prisma generate
#8 CACHED

#9 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development 13/13] RUN pnpm run build cart
#11 CACHED

#12 [development 10/13] RUN npm install -g pnpm
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [development  2/13] WORKDIR /usr/src/app
#14 CACHED

#15 [development  7/13] COPY apps/cart apps/cart
#15 CACHED

#16 [development  9/13] COPY prisma prisma
#16 CACHED

#17 [development  8/13] COPY libs libs
#17 CACHED

#18 [development  3/13] COPY package.json ./
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:2ebd0076f6ad5198506535ccc63f2184dafb8d7cb03aa2f772bd425bf30f082a done
#20 naming to docker.io/library/gift-ms-cart done
#20 DONE 0.0s
#3 DONE 0.1s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.61kB done
#5 DONE 0.0s

#6 [development 12/13] RUN pnpm exec prisma generate
#6 CACHED

#7 [development  9/13] COPY prisma prisma
#7 CACHED

#8 [development 11/13] RUN pnpm install
#8 CACHED

#9 [development  5/13] COPY tsconfig.json tsconfig.json
#9 CACHED

#10 [development  8/13] COPY libs libs
#10 CACHED

#11 [development  6/13] COPY nest-cli.json nest-cli.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development  7/13] COPY apps/customer apps/customer
#13 CACHED

#14 [development 10/13] RUN npm install -g pnpm
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 13/13] RUN pnpm run build customer
#16 CACHED

#17 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#17 CACHED

#18 [development  2/13] WORKDIR /usr/src/app
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:db98c532980c1c3ecf52ec8b683cbfdf8342542eecb85380521c1a34a33709c2 done
#20 naming to docker.io/library/gift-ms-customer done
#20 DONE 0.0s

#4 [development  1/13] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.34kB done
#5 DONE 0.0s

#6 [development 10/13] RUN npm install -g pnpm
#6 CACHED

#7 [production 5/6] COPY --from=development /usr/src/app/node_modules ./node_modules
#7 CACHED

#8 [development  8/13] COPY libs libs
#8 CACHED

#9 [development  6/13] COPY nest-cli.json nest-cli.json
#9 CACHED

#10 [development 11/13] RUN pnpm install
#10 CACHED

#11 [development  5/13] COPY tsconfig.json tsconfig.json
#11 CACHED

#12 [development  4/13] COPY pnpm-lock.yaml ./
#12 CACHED

#13 [development 13/13] RUN pnpm run build business
#13 CACHED

#14 [development  9/13] COPY prisma prisma
#14 CACHED

#15 [development  3/13] COPY package.json ./
#15 CACHED

#16 [development 12/13] RUN pnpm exec prisma generate
#16 CACHED

#17 [development  2/13] WORKDIR /usr/src/app
#17 CACHED

#18 [development  7/13] COPY apps/business apps/business
#18 CACHED

#19 [production 6/6] COPY --from=development /usr/src/app/dist ./dist
#19 CACHED

#20 exporting to image
#20 exporting layers done
#20 writing image sha256:bf91537e8e8d4252bf00b10cfc537a7b60d6b6389f3ce7c87849dde20a5ba358 done
#20 naming to docker.io/library/gift-ms-business done
#20 DONE 0.0s
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.03kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 76B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [production 1/9] FROM docker.io/library/node:18-alpine@sha256:ca5d399560a9d239cbfa28eec00417f1505e5e108f3ec6938d230767eaa81f61
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 869.16kB done
#5 DONE 0.0s

#6 [production 5/9] COPY pnpm-lock.yaml ./
#6 CACHED

#7 [development  8/13] COPY libs libs
#7 CACHED

#8 [production 8/9] COPY --from=development /usr/src/app/dist ./dist
#8 CACHED

#9 [development 12/13] RUN pnpm exec prisma generate
#9 CACHED

#10 [development 13/13] RUN pnpm run build api
#10 CACHED

#11 [development 10/13] RUN npm install -g pnpm
#11 CACHED

#12 [production 2/9] WORKDIR /usr/src/app
#12 CACHED

#13 [development  5/13] COPY tsconfig.json tsconfig.json
#13 CACHED

#14 [production 6/9] COPY prisma prisma
#14 CACHED

#15 [production 4/9] COPY package.json ./
#15 CACHED

#16 [development  4/13] COPY pnpm-lock.yaml ./
#16 CACHED

#17 [development  7/13] COPY apps/api apps/api
#17 CACHED

#18 [development  6/13] COPY nest-cli.json nest-cli.json
#18 CACHED

#19 [development 11/13] RUN pnpm install
#19 CACHED

#20 [development  9/13] COPY prisma prisma
#20 CACHED

#21 [production 3/9] RUN npm install -g pnpm
#21 CACHED

#22 [development  3/13] COPY package.json ./
#22 CACHED

#23 [production 7/9] COPY --from=development /usr/src/app/node_modules ./node_modules
#23 CACHED

#24 [production 9/9] COPY --from=development /usr/src/app/apps/api/public ./public
#24 CACHED

#25 exporting to image
#25 exporting layers done
#25 writing image sha256:75cca156e1fec21edf9dba4e2814ee475bcc62a9fd0a876e0a8b03a3c0dd3632 done
#25 naming to docker.io/library/gift-ms-api done
#25 DONE 0.0s

          ===============================
          Standard error
          ===============================
           Container gift-ms-postgres-1  Running
 Container gift-ms-mail-1  Running
 Container gift-ms-auth-1  Running
 Container gift-ms-business-1  Running
 Container gift-ms-product-1  Running
 Container gift-ms-payment-1  Running
 Container gift-ms-attribute-1  Running
 Container gift-ms-order-1  Running
 Container gift-ms-customer-1  Running
 Container gift-ms-discount-1  Running
 Container gift-ms-cart-1  Running
 Container gift-ms-category-1  Running
 Container gift-ms-api-1  Running

          ===============================
          Completed in 2.0076977469995616 seconds
          ===============================
          OS name: Linux
          OS CPU architecture: x64
          CPU model: DO-Premium-Intel
          CPU speed: 2494
          
          ===============================
        